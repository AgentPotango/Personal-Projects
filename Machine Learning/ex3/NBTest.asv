function [predictLabel, testingDataProb, accuracy] = NBTest(conditionalTable, priorProb, testAttributeSet, validLabel)

uniqueValues = unique(testAttributeSet);
uniqueLabels = unique(validLabel);
noOfTestingData = size(testAttributeSet,1);
noOfTestingAttributes = size(testAttributeSet,2);
noOfTestingValues = size(unique(testAttributeSet),1);
noOfConditions = size(unique(validLabel),1);
testingDataProb = ones(noOfTestingData,noOfConditions);
predictLabel = ones(noOfTestingData,1);

for i = 1:noOfTestingData
    for j = 1:noOfConditions
        testingDataProb(i,j) = testingDataProb(i,j) * priorProb(1,j);
    end
end

for i = 1:noOfTestingData
    for j = 1:noOfTestingAttributes
        for k = 1:noOfConditions
            for l = 1:noOfTestingValues
                if (testAttributeSet(i,j) == uniqueValues(l,1))
                    value = conditionalTable{1,j}(l,k);
                    testingDataProb(i,k) = testingDataProb(i,k) * value;
                end
            end
        end
    end
end
                    
max = 0;
accuratePrediction = 0;
for i = 1:noOfTestingData
    for j = 1:noOfConditions
        if (testingDataProb(i,j) > max)
            max = testingDataProb(i,j);
            predictLabel(i,1) =  uniqueLabels(j,1);
        end
    end
end

for i = 1:noOfTestingData
    if (predictLabel(i,1) == validLabel(i,1))
        accuratePrediction = accuratePrediction + 1;
    end
end
accuracy = accuratePrediction/noOfTestingData; 
        

            